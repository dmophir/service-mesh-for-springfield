---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv-volume
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  namespace: production
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
  namespace: production
  labels:
    app: user-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user-db
  template:
    metadata:
      labels:
        app: user-db
        istio: monitor
        version: v1
    spec:
      containers:
      - name: mysql
        image: mysql
        imagePullPolicy: Always
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: userapi-secrets
              key: db_root_password_user
        ports:
        - containerPort: 3306
          name: mysql
        volumeMounts:
          - name: mysql-persistent-storage
            mountPath: /var/lib/mysql
          - name: mysql-initdb
            mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: mysql-persistent-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim
        - name: mysql-initdb
          configMap:
            name: mysql-initdb-config

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: production
  labels:
    app: user-db
spec:
  ports:
  - port: 3306
    protocol: TCP
    name: mysql
  selector:
    app: user-db

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mysql-initdb-config
  namespace: production
data:
  initdb.sql: |
    CREATE DATABASE userapi;
    USE userapi;
    CREATE TABLE users(id INT PRIMARY KEY AUTO_INCREMENT, username VARCHAR(80), email VARCHAR(120), password VARBINARY(192), api_key VARBINARY(192));